import { LightningElement, api, wire, track } from 'lwc';import getProducts from '@salesforce/apex/ProductController.getProducts';import { NavigationMixin } from 'lightning/navigation';export default class GetOpportunityProduct extends LightningElement {    @api recordId;    @track products;    @track error;    columns = [        {            label: 'Nom du produit',            fieldName: 'Product_Name',            type: 'text'        },        {            label: 'Quantité',            fieldName: 'Quantity',            type: 'number'        },        {            label: 'Prix Unitaire',            fieldName: 'UnitPrice',            type: 'currency'        },        {            label: 'Prix Total',            fieldName: 'TotalPrice',            type: 'currency'        },        {            label: 'Quantité en Stock',            fieldName: 'Product_QuantityInStock',            type: 'number'        },        {            type: "button",            label: 'Supprimer',            initialWidth: 110,            typeAttributes: {                label: 'Delete',                name: 'Delete',                title: 'Delete',                disabled: false,                value: 'delete',                iconPosition: 'left',                iconName: 'utility:delete',                variant: 'destructive'            }        },        {            type: "button",            label: 'View',            initialWidth: 100,            typeAttributes: {                label: 'View',                name: 'View',                title: 'View',                disabled: false,                value: 'view',                iconPosition: 'left',                iconName: 'utility:preview',                variant: 'brand'            }        }    ];    wiredProductsResult;    @wire(getProducts, { accountId: '$recordId' })    wiredProducts(result) {        this.wiredProductsResult = result;        if (result.data) {            this.products = result.data.length > 0 ? result.data : null;            this.error = result.data.length === 0                ? 'Vous n\'avez pas de produits associés à cette opportunité.'                : null;        } else if (result.error) {            this.error = 'Une erreur s\'est produite lors du chargement des produits.';            this.products = undefined;        }    }    callRowAction(event) {        console.log('Row action triggered');        console.log('Action name:', event.detail.action.name);        console.log('Row details:', event.detail.row);        const recId = event.detail.row.Id;        const actionName = event.detail.action.name;        if (actionName === 'Delete') {            this.handleDeleteRow(recId);        } else if (actionName === 'View') {            this.handleAction(recId, 'view');        }    }    handleAction(recordId, mode) {        try {            console.log(`Navigating to record: ${recordId}, mode: ${mode}`);            this[NavigationMixin.Navigate]({                type: 'standard__recordPage',                attributes: {                    recordId: recordId,                    objectApiName: 'Product2',                    actionName: mode                }            });        } catch (error) {            console.error('Navigation failed:', error);        }    }    handleDeleteRow(recordIdToDelete) {        deleteRecord(recordIdToDelete)            .then(() => {                this.showToast('Success!!', 'Record deleted successfully!!', 'success', 'dismissable');                return refreshApex(this.wiredProductsResult);            })            .catch((error) => {                this.error = error;            });    }    get errorStyle() {        return this.error && this.error.includes(            'Vous n\'avez aucune ligne de produits pour le moment.\n' +            '1. Veuillez tout d\'abord sélectionner un Catalogue (Pricebook)\n' +            '2. Sélectionnez ensuite les produits à ajouter.'        )            ? 'slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_info'            : 'slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_error';    }}